CREATE DATABASE catalog_of_things;

-- Items
CREATE TABLE items(
    id VARCHAR(100) NOT NULL PRIMARY KEY,
    genre_id VARCHAR(100),
    author_id VARCHAR(100),
    label_id VARCHAR(100),
    source_id VARCHAR(100),
    publish_date DATE NOT NULL,
    archived BOOLEAN NOT NULL,
    FOREIGN KEY (genre_id) REFERENCES genres (id),
    FOREIGN KEY (author_id) REFERENCES authors (id),
    FOREIGN KEY (label_id) REFERENCES labels (id),
    FOREIGN KEY (source_id) REFERENCES sources (id),
);


CREATE TABLE Genre(
  id      INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name    VARCHAR(100)
);

CREATE TABLE MusicAlbum(
  id            INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  genre_id      INTEGER,
  author_id     INTEGER,
  label_id      INTEGER,
  publish_date  DATE,
  archived      BOOLEAN,
  name     VARCHAR(250),
  on_spotify    BOOLEAN,

  FOREIGN KEY (genre_id) REFERENCES Genre(id)
  FOREIGN KEY (author_id) REFERENCES Author(id)
  FOREIGN KEY (label_id) REFERENCES Label(id)
);

-- CREATE TABLE books 
CREATE TABLE books (
    id VARCHAR(100) NOT NULL,
    title VARCHAR(100),
    publisher VARCHAR(100),
    cover_state VARCHAR(100),
    FOREIGN KEY(id) REFERENCES item(id)
);

-- CREATE TABLE labels 
CREATE TABLE labels (
    id VARCHAR(100) NOT NULL,
    title VARCHAR(100),
    color VARCHAR(100),
    PRIMARY KEY(id)
);

-- Games
CREATE TABLE games(
    id VARCHAR(100) NOT NULL PRIMARY KEY,
    multiplayer BOOLEAN,
    last_played_at DATE,
)

-- Authors
CREATE TABLE authors(
    id VARCHAR(100) NOT NULL,
    first_name VARCHAR(100),
    last_name VARCHAR(100),
    PRIMARY KEY(id)
)

